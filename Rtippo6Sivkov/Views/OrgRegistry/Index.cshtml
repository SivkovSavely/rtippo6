@using Rtippo6Sivkov.Data
@using Microsoft.EntityFrameworkCore
@using Newtonsoft.Json
@using Rtippo6Sivkov.Controllers
@inject ApplicationDbContext DbContext

@{
    ViewBag.Title = "Реестр организаций";
    Layout = "_Layout";
}

<div class="text-center">
    <h1 class="display-4">Реестр организаций</h1>
</div>
@*<pre style="text-align: left">@JsonConvert.SerializeObject(organizations, Formatting.Indented)</pre>*@

<button class="add-org-btn" onclick="window.location='@Url.Action("GetSearch", "OrgRegistry")'">
    Поиск
</button>

@{
    var sort = TempData["Sort"] as string ?? "default";
    var organizations = Array.Empty<Organization>();
}

<select onchange="window.location=`@(Url.Action("Sort", "OrgRegistry"))?sort=${this.value}`" id="sort-select">
    <option value="default">Сортировка по порядку добавления</option>
    <option value="defaultR">Сортировка по порядку добавления (обратный)</option>
    <option value="name">Сортировка по наименованию (А -> Я)</option>
    <option value="nameR">Сортировка по наименованию (Я -> А)</option>
    <option value="type">Сортировка по типу (А -> Я)</option>
    <option value="typeR">Сортировка по типу (Я -> А)</option>
    <option value="locality">Сортировка по населенному пункту (А -> Я)</option>
    <option value="localityR">Сортировка по населенному пункту (Я -> А)</option>
    <option value="address">Сортировка по адресу регистрации (А -> Я)</option>
    <option value="addressR">Сортировка по адресу регистрации (Я -> А)</option>
    <option value="inn">Сортировка по ИНН (0 -> 9)</option>
    <option value="innR">Сортировка по ИНН (9 -> 0)</option>
    <option value="kpp">Сортировка по КПП(0 -> 9)</option>
    <option value="kppR">Сортировка по КПП(9 -> 0)</option>
</select>
<script>
const sortSelect = document.getElementById("sort-select");
sortSelect.value = "@sort";
</script>

@if (TempData["Filter"] is string filterString)
{
    var filter = JsonConvert.DeserializeObject<SearchOrganizationsViewModel>(filterString)!;

    var organizationsQueryable = DbContext
        .Organizations
        .Include(x => x.Type)
        .Include(x => x.Locality)
        .AsQueryable();

    if (filter.Name != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.Name.Contains(filter.Name));
    }

    if (filter.Inn != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.Inn == filter.Inn.ToString());
    }

    if (filter.Kpp != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.Kpp == filter.Kpp.ToString());
    }

    if (filter.Address != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.Address == filter.Address);
    }

    if (filter.IsPhysical != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.IsPhysical == filter.IsPhysical);
    }

    if (filter.TypeId != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.Type.Id == filter.TypeId);
    }

    if (filter.LocalityId != null)
    {
        organizationsQueryable = organizationsQueryable.Where(x => x.Locality.Id == filter.LocalityId);
    }

    organizations = organizationsQueryable.ToArray();

    <br/>
    <span>Фильтр: @filter</span><button onclick="window.location='@Url.Action("ClearSearchFilter", "OrgRegistry")'">Сбросить фильтр</button>
}
else
{
    organizations = DbContext
        .Organizations
        .Include(x => x.Locality)
        .Include(x => x.Type)
        .ToArray();
}

@{
    switch (sort)
    {
        case "default":
            break;
        case "defaultR":
            organizations = organizations.Reverse().ToArray();
            break;
        case "name":
            organizations = organizations.OrderBy(x => x.Name).ToArray();
            break;
        case "nameR":
            organizations = organizations.OrderByDescending(x => x.Name).ToArray();
            break;
        case "type":
            organizations = organizations.OrderBy(x => x.Type.Name).ToArray();
            break;
        case "typeR":
            organizations = organizations.OrderByDescending(x => x.Type.Name).ToArray();
            break;
        case "locality":
            organizations = organizations.OrderBy(x => x.Locality.Name).ToArray();
            break;
        case "localityR":
            organizations = organizations.OrderByDescending(x => x.Locality.Name).ToArray();
            break;
        case "address":
            organizations = organizations.OrderBy(x => x.Address).ToArray();
            break;
        case "addressR":
            organizations = organizations.OrderByDescending(x => x.Address).ToArray();
            break;
        case "inn":
            organizations = organizations.OrderBy(x => x.Inn).ToArray();
            break;
        case "innR":
            organizations = organizations.OrderByDescending(x => x.Inn).ToArray();
            break;
        case "kpp":
            organizations = organizations.OrderBy(x => x.Kpp).ToArray();
            break;
        case "kppR":
            organizations = organizations.OrderByDescending(x => x.Kpp).ToArray();
            break;
    }
}

<table class="org-table">
    <thead>
    <tr>
        <td>ID</td>
        <td>Наименование</td>
        <td>Тип</td>
        <td>Населенный пункт</td>
        <td>Адрес</td>
        <td>ИНН</td>
        <td>КПП</td>
    </tr>
    </thead>
    <tbody>
    @foreach (var org in organizations)
    {
        <tr>
            <td>@org.Id</td>
            <td>@org.Name</td>
            <td>@org.Type.Name</td>
            <td>@org.Locality.Name</td>
            <td>@org.Address</td>
            <td>@org.Inn</td>
            <td>@org.Kpp</td>
        </tr>
    }
    </tbody>
</table>

<button class="add-org-btn" onclick="window.location='@Url.Action("GetAdd", "OrgRegistry")'">
    Добавить новую организацию
</button>

<style>
    .org-table {
        border: 1px solid black;
    }
    .org-table td {
        border: 1px solid black;
        padding: 0.25em 0.5em;
    }
    
    .org-table td:nth-child(1) {
        width: 2%;
    }
    .org-table td:nth-child(2) {
        width: 16%;
    }
    .org-table td:nth-child(3) {
        width: 14%;
    }
    .org-table td:nth-child(4) {
        width: 10%;
    }
    .org-table td:nth-child(5) {
        width: 40%;
    }
    .org-table td:nth-child(6) {
        width: 9%;
    }
    .org-table td:nth-child(7) {
        width: 9%;
    }
    
    .add-org-btn {
        margin: 1em 0;
    }
</style>